[versions]
agp = "8.7.3"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activity = "1.10.1"
androidx-appcompat = "1.7.1"
androidx-constraintlayout = "2.2.1"
androidx-core = "1.16.0"
androidx-espresso = "3.6.1"
androidx-lifecycle = "2.9.1"
androidx-testExt = "1.2.1"
composeMultiplatform = "1.9.0-beta01"
junit = "4.13.2"
kotlin = "2.2.0"
coil3 = "3.3.0"
splash = "1.0.1"
navigation = "2.9.0-beta01"
koin = "4.1.0"
coroutines = "1.10.1"
ktor = "3.0.3"
savedState = "1.3.1"
graphicsShapes = "1.0.0-alpha09"
material3Adaptive = "1.2.0-alpha04"
material3Expressve = "1.9.0-alpha04"
mokoPermission = "0.19.1"
mokoGeo = "0.8.0"
googlePlayServiceLocation = "21.0.1"
kotlinxDateTime = "0.6.0"
detekt = "1.23.1"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-testJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { module = "junit:junit", version.ref = "junit" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-testExt-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-testExt" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-date-time = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
splash-screen = { module = "androidx.core:core-splashscreen" , version.ref ="splash" }




saved-state = { module = "org.jetbrains.androidx.savedstate:savedstate" , version.ref ="savedState" }
graphics-shapes = { module = "org.jetbrains.androidx.graphics:graphics-shapes", version.ref = "graphicsShapes" }
material3-adaptive = { module = "org.jetbrains.compose.material3.adaptive:adaptive", version.ref = "material3Adaptive" }
material3-expressive = { module = "org.jetbrains.compose.material3:material3", version.ref = "material3Expressve" }

## Navigation
compose-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation" }

## COIL IMAGE LOADER
coil3 = { module = "io.coil-kt.coil3:coil", version.ref = "coil3" }
coil3-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3" }
coil3-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil3" }
coil3-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil3" }


## KOIN DI
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }

## KTOR HTTP IO
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }


## MOKO PERMISSIONS
moko-permission-compose = { module ="dev.icerock.moko:permissions-compose", version.ref = "mokoPermission"}
moko-permission-core = { module ="dev.icerock.moko:permissions", version.ref = "mokoPermission"}
moko-permission-camera = { module ="dev.icerock.moko:permissions-camera", version.ref = "mokoPermission"}
moko-permission-gallery = { module ="dev.icerock.moko:permissions-gallery", version.ref = "mokoPermission"}
moko-permission-location = { module ="dev.icerock.moko:permissions-location", version.ref = "mokoPermission"}


ktor-darwin-client = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-cio-client = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-android-client = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }

moko-geo = { module = "dev.icerock.moko:geo", version.ref = "mokoGeo" }
moko-geo-compose = { module = "dev.icerock.moko:geo-compose", version.ref = "mokoGeo" }


[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }